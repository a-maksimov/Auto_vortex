import config
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from telegram_bot_calendar import WYearTelegramCalendar
from datetime import date
from SQLighter import SQLighter
from correct_number import correct_number

LSTEP = {'y': '–≥–æ–¥', 'm': '–º–µ—Å—è—Ü', 'd': '–¥–µ–Ω—å'}


# user_id = 346521502
# user_id = 267560822  # –ù–∞—Å—Ç–∏–Ω user_id

# –Ω–∞—á–∞–ª–æ –≤–æ—Ä–æ–Ω–∫–∏
def markup_start():
    markup = InlineKeyboardMarkup()
    item1 = InlineKeyboardButton('–°–∫—Ä—ã—Ç—å', callback_data='hide')
    markup.row(item1)
    item2 = InlineKeyboardButton('–î–∞–≤–Ω–æ', callback_data='long_ago')
    item3 = InlineKeyboardButton('–ù–µ–¥–∞–≤–Ω–æ', callback_data='not_long_ago')
    markup.row(item2, item3)
    return markup


# –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ –º–∞–Ω–∏–∫—é—Ä
def markup_nails():
    markup = InlineKeyboardMarkup()
    item1 = InlineKeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è üìÖ', callback_data='calendar_nails')
    item2 = InlineKeyboardButton('–°–∫—Ä—ã—Ç—å', callback_data='hide')
    markup.add(item1, item2)
    return markup


# –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ –º–µ–π–∫–∞–ø
def markup_makeup():
    markup = InlineKeyboardMarkup()
    item1 = InlineKeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è üìÖ', callback_data='calendar_makeup')
    item2 = InlineKeyboardButton('–°–∫—Ä—ã—Ç—å', callback_data='hide')
    markup.add(item1, item2)
    return markup


# –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å—Ç–∞–π–ª–∏–Ω–≥
def markup_styling():
    markup = InlineKeyboardMarkup()
    item1 = InlineKeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è üìÖ', callback_data='calendar_styling')
    item2 = InlineKeyboardButton('–°–∫—Ä—ã—Ç—å', callback_data='hide')
    markup.add(item1, item2)
    return markup


# –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ –º–∞—Å—Å–∞–∂ –ª–∏—Ü–∞
def markup_face_massage():
    markup = InlineKeyboardMarkup()
    item1 = InlineKeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è üìÖ', callback_data='calendar_face_massage')
    item2 = InlineKeyboardButton('–°–∫—Ä—ã—Ç—å', callback_data='hide')
    markup.add(item1, item2)
    return markup


# –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –Ω–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
def markup_other():
    markup = InlineKeyboardMarkup()
    item1 = InlineKeyboardButton('–°–∫—Ä—ã—Ç—å', callback_data='hide')
    markup.row(item1)
    item2 = InlineKeyboardButton('–ú–∞–Ω–∏–∫—é—Ä üíÖ', callback_data='book_nails')
    item3 = InlineKeyboardButton('–ú–µ–π–∫–∞–ø üíÑ', callback_data='book_makeup')
    item4 = InlineKeyboardButton('–°—Ç–∞–π–ª–∏–Ω–≥ üíá', callback_data='book_styling')
    markup.row(item2, item3, item4)
    item5 = InlineKeyboardButton('–ú–∞—Å—Å–∞–∂ –ª–∏—Ü–∞ üíÜ', callback_data='book_face_massage')
    markup.row(item5)
    return markup


def start_vortex(bot, message):
    markup = markup_start()
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.chat.first_name}!\n'
                                      f'–Ø –í–æ—Ä—Ç–µ–∫—Å –∏–∑ –ò–Ω–¥—É—Å—Ç—Ä–∏–∏ –∫—Ä–∞—Å–æ—Ç—ã.\n'
                                      f'–ö–∞–∫ –¥–∞–≤–Ω–æ –≤—ã –¥–µ–ª–∞–ª–∏ üíÖ?',
                     reply_markup=markup)


def step_set_first_name(message, bot, call, cal_id):
    first_name = message.text  # –ø—Ä–∏–Ω–∏–º–∞–µ–º –∏–º—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∏–º—è –±—É–∫–≤–æ–π –∏–ª–∏ —Å–ª–æ–≤–æ–º
    if not first_name.isalpha():
        msg = bot.send_message(message.chat.id, '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –±—É–∫–≤',
                               reply_to_message_id=message.message_id)
        bot.register_next_step_handler(msg, step_set_first_name, bot, call, cal_id)  # –µ—Å–ª–∏ –Ω–µ –±—É–∫–≤–∞, –∏ –Ω–µ —Å–ª–æ–≤–æ, —Ç–æ
        # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
    else:
        first_name = first_name.capitalize()  # –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–º—è
        msg = bot.send_message(call.message.chat.id, '–í–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é')
        bot.register_next_step_handler(msg, step_set_last_name, bot, call, cal_id, first_name)  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ñ—É–Ω–∫—Ü–∏—é
        # –∑–∞–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏


def step_set_last_name(message, bot, call, cal_id, first_name):
    last_name = message.text  # –ø—Ä–∏–Ω–∏–º–∞–µ–º —Ñ–∞–º–∏–ª–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–º–∏–ª–∏—è –±—É–∫–≤–æ–π –∏–ª–∏ —Å–ª–æ–≤–æ–º
    if not last_name.isalpha():
        msg = bot.send_message(message.chat.id, '–§–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω–∞ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –±—É–∫–≤',
                               reply_to_message_id=message.message_id)
        bot.register_next_step_handler(msg, step_set_last_name, bot, call, cal_id, first_name)  # –µ—Å–ª–∏ –Ω–µ –±—É–∫–≤–∞, –∏ –Ω–µ
        # —Å–ª–æ–≤–æ, —Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
    else:
        last_name = last_name.capitalize()  # –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∞–º–∏–ª–∏—é
        msg = bot.send_message(call.message.chat.id, '–í–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "7-123-456-7890" üì≤')
        bot.register_next_step_handler(msg, step_set_phone, bot, call, cal_id, first_name, last_name)  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤
        # —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–¥–∞–Ω–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞


def step_set_phone(message, bot, call, cal_id, first_name, last_name):
    global LSTEP
    phone = message.text  # –ø—Ä–∏–Ω–∏–º–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –Ω–æ–º–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º
    if not correct_number(phone):
        msg = bot.send_message(message.chat.id, '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ "7-123-456-7890"',
                               reply_to_message_id=message.message_id)
        bot.register_next_step_handler(msg, step_set_phone, bot, call, cal_id, first_name, last_name)  # –µ—Å–ª–∏
        # –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, —Ç–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
    else:
        client = (call.from_user.id, first_name, last_name, phone)
        add_client(client)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü—É
        calendar, step = WYearTelegramCalendar(calendar_id=cal_id, locale='ru',
                                               min_date=date.today()).build()  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        if cal_id == 1:
            string = '–º–∞–Ω–∏–∫—é—Ä'
        elif cal_id == 2:
            string = '–º–µ–π–∫–∞–ø'
        elif cal_id == 3:
            string = '—Å—Ç–∞–π–ª–∏–Ω–≥'
        else:
            string = '–º–∞—Å—Å–∞–∂ –ª–∏—Ü–∞'
        bot.send_message(call.message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ {LSTEP[step]} –∑–∞–ø–∏—Å–∏ –Ω–∞ {string}', reply_markup=calendar)


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
def callback_calendar(bot, call):
    global LSTEP
    cal_id = int(call.data.split('_')[1])
    if cal_id == 1:
        string = '–º–∞–Ω–∏–∫—é—Ä üíÖ'
    elif cal_id == 2:
        string = '–º–µ–π–∫–∞–ø üíÑ'
    elif cal_id == 3:
        string = '—Å—Ç–∞–π–ª–∏–Ω–≥ üíá'
    else:
        string = '–º–∞—Å—Å–∞–∂ –ª–∏—Ü–∞ üíÜ'

    result, key, step = WYearTelegramCalendar(calendar_id=cal_id, locale='ru', min_date=date.today()).process(call.data)
    if not result and key:
        bot.edit_message_text(f'–í—ã–±–µ—Ä–∏—Ç–µ {LSTEP[step]} –∑–∞–ø–∏—Å–∏ –Ω–∞ {string}',
                              call.message.chat.id, call.message.message_id, reply_markup=key)
    elif result:
        add_booking(call, call.from_user.id, result)
        bot.answer_callback_query(call.id, text='–î–∞—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞')
        bot.edit_message_text(f'–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã.\n'
                              f'–ñ–¥–µ–º –≤–∞—Å {result} –Ω–∞ {string}', call.message.chat.id, call.message.message_id)


# —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
def add_client(client):
    db_worker = SQLighter(config.database_name)
    db_worker.add_client(client)
    db_worker.close()


# —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞—Ç—ã –∑–∞–ø–∏—Å–∏
# TODO: user_id is not unique for client if someone gets booked by another user_id
# TODO: and phone can't be passed to booking; try using increment id for booking
def add_booking(call, user_id, result):
    booking_date = (result.year, result.month, result.day)
    cal_id = int(call.data.split('_')[1])
    if cal_id == 1:
        table = 'calendar_nails'
    elif cal_id == 2:
        table = 'calendar_makeup'
    elif cal_id == 3:
        table = 'calendar_styling'
    else:
        table = 'calendar_face_massage'
    db_worker = SQLighter(config.database_name)
    db_worker.add_booking(user_id, table, booking_date)
    db_worker.close()


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
def callback_query(bot, call):
    req = call.data

    if req == 'hide':
        bot.delete_message(call.message.chat.id, call.message.message_id)

    elif req == 'long_ago':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = markup_nails()
        img_url = 'https://image.shutterstock.com/image-photo/close-process-manicure-beauty-salon-600w-174272696.jpg'
        title = '–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –º–∞–Ω–∏–∫—é—Ä üíÖ!'
        bot.send_photo(call.message.chat.id, img_url, caption=title, reply_markup=markup)

    elif req == 'not_long_ago':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = markup_other()
        bot.send_message(call.message.chat.id,
                         '–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —à–∏—Ä–æ–∫–∏–π —Å–ø–µ–∫—Ç—Ä –±—å—é—Ç–∏-–ø—Ä–æ—Ü–µ–¥—É—Ä.\n'
                         '–ù–∞ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?',
                         reply_markup=markup)

    elif req == 'book_nails':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = markup_nails()
        img_url = 'https://image.shutterstock.com/image-photo/close-process-manicure-beauty-salon-600w-174272696.jpg'
        title = '–ó–∞–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –º–∞–Ω–∏–∫—é—Ä üíÖ!'
        bot.send_photo(call.message.chat.id, img_url, caption=title, reply_markup=markup)

    elif req == 'book_makeup':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = markup_makeup()
        img_url = 'https://image.shutterstock.com/image-photo/make-products-prsented-on-white-600w-1885493167.jpg'
        title = '–ó–∞–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –º–µ–π–∫–∞–ø!'
        bot.send_photo(call.message.chat.id, img_url, caption=title, reply_markup=markup)

    elif req == 'book_styling':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = markup_styling()
        img_url = 'https://image.shutterstock.com/image-photo/set-hairdressers-accessories-on-grey-600w-1695994237.jpg'
        title = '–ó–∞–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å—Ç–∞–π–ª–∏–Ω–≥!'
        bot.send_photo(call.message.chat.id, img_url, caption=title, reply_markup=markup)

    elif req == 'book_face_massage':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = markup_face_massage()
        img_url = 'https://image.shutterstock.com/image-photo/woman-receiving-head-massage-bali-600w-1909994005.jpg'
        title = '–ó–∞–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –º–∞—Å—Å–∞–∂ –ª–∏—Ü–∞!'
        bot.send_photo(call.message.chat.id, img_url, caption=title, reply_markup=markup)
    # –∑–∞–ø–∏—Å—å –Ω–∞ –±—å—é—Ç–∏-—É—Å–ª—É–≥–∏
    elif req == 'calendar_nails' or 'calendar_makeup' or 'calendar_styling' or 'calendar_face_massage':
        if req == 'calendar_nails':
            cal_id = 1
        elif req == 'calendar_makeup':
            cal_id = 2
        elif req == 'calendar_styling':
            cal_id = 3
        else:
            cal_id = 4
        msg = bot.send_message(call.message.chat.id, '–í–µ–¥–∏—Ç–µ –∏–º—è')
        bot.register_next_step_handler(msg, step_set_first_name, bot, call, cal_id)  # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏
